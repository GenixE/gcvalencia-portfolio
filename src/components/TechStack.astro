---
// Tech Stack component with continuous scrolling carousel organized by categories
const techStackGroups = {
  "Frontend Frameworks": ["react", "astro"],
  "Languages": ["typeScript", "javaScript", "PHP", "HTML5", "CSS3"],
  "Styling & UI": ["tailwindcss", "daisyUI", "bootstrap"],
  "Backend & Runtime": ["nodejs", "laravel"],
  "Database": ["mysql"],
  "Tools": ["git"]
};

// Flatten the grouped technologies for the carousel while maintaining logical order
const technologies = [
  ...techStackGroups["Frontend Frameworks"],
  ...techStackGroups["Languages"],
  ...techStackGroups["Styling & UI"],
  ...techStackGroups["Backend & Runtime"],
  ...techStackGroups["Database"],
  ...techStackGroups["Tools"]
];

// Mapping for correct technology name formatting
const techNameMap = {
  "daisyUI": "DaisyUI",
  "PHP": "PHP",
  "typeScript": "TypeScript",
  "javaScript": "JavaScript",
  "tailwindcss": "TailwindCSS",
  "HTML5": "HTML5",
  "CSS3": "CSS3",
  "mysql": "MySQL",
  "nodejs": "Node.js"
};

// Function to get the correct display name
const getTechDisplayName = (tech) => {
  return techNameMap[tech] || tech.charAt(0).toUpperCase() + tech.slice(1);
};
---

<section id="tech" class="py-20 bg-gray-50 dark:bg-gray-800">
  <div class="container mx-auto px-6">
    <div class="max-w-6xl mx-auto">
      <h2 class="text-4xl md:text-5xl font-bold text-center text-gray-900 dark:text-white mb-16">
        Tech Stack
      </h2>

      <p class="text-center text-lg text-gray-600 dark:text-gray-300 mb-12 max-w-2xl mx-auto">
        Technologies and tools I use to bring ideas to life
      </p>

      <!-- Continuous Scrolling Tech Stack -->
      <div class="relative overflow-x-hidden py-8">
        <div
          class="pointer-events-none absolute inset-y-0 left-0 w-32 bg-gradient-to-r from-gray-50 dark:from-gray-800 to-transparent z-20"
        >
        </div>
        <div
          class="pointer-events-none absolute inset-y-0 right-0 w-32 bg-gradient-to-l from-gray-50 dark:from-gray-800 to-transparent z-20"
        >
        </div>

        <div class="flex animate-scroll hover:animate-paused gap-12 md:gap-20 w-max">
          {
            [...technologies, ...technologies, ...technologies].map((tech) => (
              <div class="flex items-center gap-3 group transition-all duration-300">
                <div class="w-10 h-10 rounded-xl bg-white dark:bg-gray-700 flex items-center justify-center shadow-lg border border-gray-200 dark:border-gray-600 transition-transform group-hover:scale-110">
                  <img
                    src={`/svg/${tech}.svg`}
                    alt={tech}
                    class="h-6 w-6 object-contain opacity-80 group-hover:opacity-100 transition-opacity"
                    width="24"
                    height="24"
                    loading="lazy"
                  />
                </div>
                <span class="text-lg font-medium text-gray-700 dark:text-gray-300 whitespace-nowrap">
                  {getTechDisplayName(tech)}
                </span>
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </div>
</section>

<style is:global>
  @keyframes scroll {
    from {
      transform: translateX(0);
    }
    to {
      transform: translateX(-33.333%);
    }
  }

  .animate-scroll {
    animation: scroll 60s linear infinite;
  }

  .animate-paused {
    animation-play-state: paused;
  }

  @media (min-width: 768px) {
    .animate-scroll {
      animation-duration: 50s;
    }
  }

  @media (prefers-reduced-motion: reduce) {
    .animate-scroll {
      animation: none;
    }
  }
</style>
